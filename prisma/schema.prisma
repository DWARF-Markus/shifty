datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Company {
  id          Int            @default(autoincrement()) @id
  name        String
  createdAt   DateTime       @default(now())
  email       String         @unique
  password    String
  days        String
  CompanyType CompanyType[]
  CompanySize CompanySize[]
  Employee    Employee[]
  Shift       CompanyShift[]
}

model CompanyType {
  id        Int      @default(autoincrement()) @id
  companyId Int?
  type      String
  Company   Company? @relation(fields: [companyId], references: [id])
}

model CompanySize {
  id        Int      @default(autoincrement()) @id
  companyId Int?
  size      String
  Company   Company? @relation(fields: [companyId], references: [id])
}

model Employee {
  id                      Int                    @default(autoincrement()) @id
  firstName               String
  lastName                String
  email                   String                 @unique
  password                String
  profileImage            String
  acceptedCompany         Boolean                @default(false)
  acceptedCompanyDateTime DateTime?
  companyId               Int?
  companyForeign          Company?               @relation(fields: [companyId], references: [id])
  CompanyShiftEmployee    CompanyShiftEmployee[]
}

model EmployeeVacation {
  id         Int       @default(autoincrement()) @id
  employeeId Int?
  Employee   Employee? @relation(fields: [employeeId], references: [id])
  dateStart  DateTime
  dateEnd    DateTime
  approved   Boolean
}

model CompanyShift {
  id                   Int                    @default(autoincrement()) @id
  createdAt            DateTime               @default(now())
  companyId            Int?
  Company              Company?               @relation(fields: [companyId], references: [id])
  title                String
  extraWage            Int?
  employeeAmount       Int
  startTime            DateTime
  endTime              DateTime
  CompanyShiftEmployee CompanyShiftEmployee[]
}

model CompanyShiftEmployee {
  id             Int           @default(autoincrement()) @id
  employeeId     Int?
  Employees      Employee?     @relation(fields: [employeeId], references: [id])
  companyShiftId Int?
  CompanyShift   CompanyShift? @relation(fields: [companyShiftId], references: [id])
}